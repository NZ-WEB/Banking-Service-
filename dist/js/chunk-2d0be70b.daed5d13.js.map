{"version":3,"sources":["webpack:///./src/views/Auth.vue","webpack:///./src/use/login-form.js","webpack:///./src/views/Auth.vue?59b5"],"names":["for","class","onSubmit","eError","type","id","email","eBlur","pError","password","pBlur","disabled","isSubmitting","isTooManyAttempts","useLoginForm","store","useStore","router","useRouter","route","useRoute","useForm","handleSubmit","submitCount","useField","yup","trim","required","value","errorMessage","handleBlur","MIN_LENGTH","min","computed","watch","val","setTimeout","values","dispatch","push","query","message","error","setup","name","render","__scopeId"],"mappings":"qNAEI,eAAwB,UAApB,mBAAe,G,EAEjB,eAAgC,SAAzBA,IAAI,SAAQ,SAAK,G,YAKxB,eAAoC,SAA7BA,IAAI,YAAW,UAAM,G,mBAMzBC,MAAM,e,wEAdb,eAeO,QAfDA,MAAM,OAAQ,SAAM,8CAAU,EAAAC,UAAA,EAAAA,SAAA,qBAAQ,e,CAC1C,EACA,eAIM,OAJDD,MAAK,CAAC,eAAc,SAAmB,EAAAE,U,CAC1C,E,eACA,eAA4D,SAArDC,KAAK,OAAOC,GAAG,Q,qDAAiB,EAAAC,MAAK,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAd,EAAAD,SAC1B,EAAAH,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAEhC,eAIM,OAJDF,MAAK,CAAC,eAAc,SAAmB,EAAAO,U,CAC1C,E,eACA,eAAsE,SAA/DJ,KAAK,WAAWC,GAAG,W,qDAAoB,EAAAI,SAAQ,IAAG,OAAI,8BAAE,EAAAC,OAAA,EAAAA,MAAA,sB,mBAAjB,EAAAD,YACjC,EAAAD,Q,iBAAb,eAAyC,yBAAjB,EAAAA,QAAM,I,0BAEhC,eAAsG,UAA9FJ,KAAK,SAASH,MAAM,cAAeU,SAAU,EAAAC,cAAgB,EAAAC,mBAAmB,QAAK,gBAE9D,EAAAA,mB,iBAA/B,eAAoH,MAApH,EAAkD,iE,kJCR/C,SAASC,IACZ,IAAMC,EAAQC,iBACRC,EAASC,iBACTC,EAAQC,iBAHa,EAIuBC,iBAA3CC,EAJoB,EAIpBA,aAAcV,EAJM,EAINA,aAAcW,EAJR,EAIQA,YAJR,EAMqCC,eAC9D,QACAC,SAEGC,OACAC,SAAS,4BACTrB,MAAM,uCANGA,EANa,EAMpBsB,MAA4BzB,EANR,EAMN0B,aAAkCtB,EAN5B,EAMgBuB,WASrCC,EAAa,EAfQ,EAiBwCP,eACjE,WACAC,SAEGC,OACAC,SAAS,6BACTK,IAAID,EAJP,sCAIkDA,EAJlD,eAFYtB,EAjBa,EAiBpBmB,MAA+BpB,EAjBX,EAiBHqB,aAAkCnB,EAjB/B,EAiBmBoB,WASxCjB,EAAoBoB,gBAAS,kBAAMV,EAAYK,OAAS,KAE9DM,eAAMrB,GAAmB,SAAAsB,GACjBA,GACAC,YAAW,kBAAMb,EAAYK,MAAQ,IAAG,SAIhD,IAAM1B,EAAWoB,EAAY,yDAAC,WAAMe,GAAN,0GAEhBtB,EAAMuB,SAAS,aAAcD,GAFb,OAGtBpB,EAAOsB,KAAK,KAHU,0GAAD,uDAe7B,OAPIpB,EAAMqB,MAAMC,SACZ1B,EAAMuB,SAAS,aAAc,CACzBV,MAAOc,eAAMvB,EAAMqB,MAAMC,SACzBrC,KAAM,YAIP,CACHE,QACAG,WACAN,SACAK,SACAD,QACAG,QACAR,WACAU,eACAC,qBDvCO,OACb8B,MADa,WAWX,yBAAW7B,MAEb8B,KAAM,QEpCR,EAAOC,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-2d0be70b.daed5d13.js","sourcesContent":["<template>\r\n  <form class=\"card\" @submit.prevent=\"onSubmit\">\r\n    <h1>Войти в систему</h1>\r\n    <div class=\"form-control\" :class=\"{invalid: eError}\">\r\n      <label for=\"email\">Email</label>\r\n      <input type=\"text\" id=\"email\" v-model=\"email\" @blur=\"eBlur\">\r\n      <small v-if=\"eError\">{{ eError }}</small>\r\n    </div>\r\n    <div class=\"form-control\" :class=\"{invalid: pError}\">\r\n      <label for=\"password\">Пароль</label>\r\n      <input type=\"password\" id=\"password\" v-model=\"password\" @blur=\"pBlur\">\r\n      <small v-if=\"pError\">{{ pError }}</small>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn primary\" :disabled=\"isSubmitting || isTooManyAttempts\">Войти</button>\r\n\r\n    <div class=\"text-danger\" v-if=\"isTooManyAttempts\">Вы слишко часто пытаетесь войти в систему. Попробуйте позже!</div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {useLoginForm} from '../use/login-form'\r\nimport {useRoute} from 'vue-router'\r\nimport {useStore} from \"vuex\";\r\nimport {error} from '../utils/error'\r\n\r\nexport default {\r\n  setup() {\r\n    // const route = useRoute()\r\n    // const store = useStore()\r\n    // if (route.query.message) {\r\n    //   store.dispatch('setMessage', {\r\n    //     value: error(route.query.message),\r\n    //     type: 'warning'\r\n    //   })\r\n    // }\r\n\r\n    return {...useLoginForm(),}\r\n  },\r\n  name: \"Auth\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import {useField, useForm} from 'vee-validate'\r\nimport * as yup from 'yup'\r\nimport {computed, watch} from 'vue'\r\nimport {useStore} from 'vuex'\r\nimport {useRoute, useRouter} from 'vue-router'\r\nimport {error} from \"../utils/error\";\r\n\r\nexport function useLoginForm() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const {handleSubmit, isSubmitting, submitCount} = useForm()\r\n\r\n    const {value: email, errorMessage: eError, handleBlur: eBlur} = useField(\r\n      'email',\r\n      yup\r\n        .string()\r\n        .trim()\r\n        .required('Пожалуйста введите email')\r\n        .email('Необходимо ввести корректный email')\r\n    )\r\n\r\n    const MIN_LENGTH = 6\r\n\r\n    const {value: password, errorMessage: pError, handleBlur: pBlur} = useField(\r\n      'password',\r\n      yup\r\n        .string()\r\n        .trim()\r\n        .required('Пожалуйста введите пароль')\r\n        .min(MIN_LENGTH, `Пароль не может быть меньше ${MIN_LENGTH} символов`)\r\n    )\r\n\r\n    const isTooManyAttempts = computed(() => submitCount.value >= 3)\r\n\r\n    watch(isTooManyAttempts, val => {\r\n        if (val) {\r\n            setTimeout(() => submitCount.value = 0, 1500)\r\n        }\r\n    })\r\n\r\n    const onSubmit = handleSubmit(async values => {\r\n        try {\r\n            await store.dispatch('auth/login', values)\r\n            router.push('/')\r\n        } catch (e) {\r\n        }\r\n    })\r\n\r\n    if (route.query.message) {\r\n        store.dispatch('setMessage', {\r\n            value: error(route.query.message),\r\n            type: 'warning'\r\n        })\r\n    }\r\n\r\n    return {\r\n        email,\r\n        password,\r\n        eError,\r\n        pError,\r\n        eBlur,\r\n        pBlur,\r\n        onSubmit,\r\n        isSubmitting,\r\n        isTooManyAttempts\r\n    }\r\n}\r\n","import { render } from \"./Auth.vue?vue&type=template&id=52a0d74e&scoped=true\"\nimport script from \"./Auth.vue?vue&type=script&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-52a0d74e\"\n\nexport default script"],"sourceRoot":""}